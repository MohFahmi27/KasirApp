
import com.sun.glass.events.KeyEvent;
import java.awt.Color;
import java.awt.Component;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.regex.Pattern;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author MF
 */
public class Suku_Cadang extends javax.swing.JFrame {
    Connection con;
    Statement sta;
    ResultSet rs;
    DefaultTableModel tbm;
    /**
     * Creates new form Suku_Cadang
     */
    public Suku_Cadang() {
        initComponents();
        
        cmbjenis_barang.requestFocus(true);
        
        tblsuku_cadang.getTableHeader().setDefaultRenderer(new Supplier.HeaderColor());
        
        txtmerk.setVisible(false);
        btnback.setContentAreaFilled(false);
        btntambah_suku.setBackground(Color.black);
        btnhapus_suku.setBackground(Color.black);
        btncari_suku.setBackground(Color.black);
        btnedit_suku.setBackground(Color.black);
        btnbatal.setBackground(Color.black);
        btntambah_merk.setContentAreaFilled(false);
        
        
        btnhapus_suku.setEnabled(false);
        btnedit_suku.setEnabled(false);
        
        txtkode_barang.setEditable(false);
        
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        
        
        koneksi DB = new koneksi();
        DB.config();
        con = DB.con;
        sta = DB.stm;
        
        masuktable_suku();
        merk();
    }

    private void masuktable_suku() {
        try{
                sta = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
                tbm = new DefaultTableModel();
                tbm.addColumn("KODE BARANG");
                tbm.addColumn("NAMA BARANG");
                tbm.addColumn("MERK");
                tbm.addColumn("JENIS");
                tbm.addColumn("STOCK");
                tbm.addColumn("HARGA");
                tbm.addColumn("KET");
                
               tblsuku_cadang.setModel(tbm);
                rs = sta.executeQuery("SELECT suku_cadang.*,merk_barang.id_merk,merk_barang.nm_merk FROM suku_cadang,merk_barang WHERE suku_cadang.id_merk=merk_barang.id_merk");
                while (rs.next()){
                    tbm.addRow(new Object[]{
                    rs.getString("kode_barang"),
                    rs.getString("nm_suku_cadang"),
                    rs.getString("nm_merk"),
                    rs.getString("jenis_suku_cadang"),
                    rs.getString("stock"),
                    rs.getString("harga"),
                    rs.getString("ket"),
                    
                    
                });
                    tblsuku_cadang.setModel(tbm);
                    }
                }catch(Exception e){
//                        JOptionPane.showMessageDialog(rootPane,"Gagal"+e);
                        
                    }
    }
    
     private void merk() {
        try {
            String sql;
            sql = ("SELECT * FROM merk_barang");
            rs = sta.executeQuery(sql);
            while (rs.next()) {
                cmbmerk_barang.addItem(rs.getString("nm_merk"));
                
            } 
        } catch (Exception e) {
        }
    }
    
     private void kosong() {
         cmbjenis_barang.setSelectedItem("------PILIHAN------");
         cmbmerk_barang.setSelectedItem("--PILIHAN--");
         txtkode_barang.setText("");
         txtmerk.setText("");
         txtnama_barang.setText("");
         txtstock.setText("");
         txtket_barang.setText("");
         txtharga.setText("");
         txtket_barang.setText("-");
         cmbjenis_barang.requestFocus(true);
         
     }
     
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel8 = new javax.swing.JPanel();
        btnback = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jPanel14 = new javax.swing.JPanel();
        btntambah_suku = new javax.swing.JButton();
        btnedit_suku = new javax.swing.JButton();
        btnhapus_suku = new javax.swing.JButton();
        btnbatal = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        lbljenis = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        cmbjenis_barang = new javax.swing.JComboBox();
        txtkode_barang = new javax.swing.JTextField();
        cmbmerk_barang = new javax.swing.JComboBox();
        txtstock = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtharga = new javax.swing.JTextField();
        txtket_barang = new javax.swing.JTextField();
        txtnama_barang = new javax.swing.JTextField();
        txtmerk = new javax.swing.JTextField();
        btntambah_merk = new javax.swing.JButton();
        jPanel15 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        txtcari = new javax.swing.JTextField();
        btncari_suku = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblsuku_cadang = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel8.setBackground(new java.awt.Color(0, 0, 0));
        jPanel8.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        btnback.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/left-arrow.png"))); // NOI18N
        btnback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbackActionPerformed(evt);
            }
        });
        jPanel8.add(btnback);

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("SUKU CADANG");
        jPanel8.add(jLabel4);

        getContentPane().add(jPanel8, java.awt.BorderLayout.PAGE_START);

        jPanel14.setBackground(new java.awt.Color(51, 51, 51));
        jPanel14.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        btntambah_suku.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N
        btntambah_suku.setForeground(new java.awt.Color(255, 255, 255));
        btntambah_suku.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/plus.png"))); // NOI18N
        btntambah_suku.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btntambah_sukuMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btntambah_sukuMouseExited(evt);
            }
        });
        btntambah_suku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntambah_sukuActionPerformed(evt);
            }
        });
        jPanel14.add(btntambah_suku);

        btnedit_suku.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N
        btnedit_suku.setForeground(new java.awt.Color(255, 255, 255));
        btnedit_suku.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/diskette-outline-with-rounded-edges.png"))); // NOI18N
        btnedit_suku.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnedit_sukuMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnedit_sukuMouseExited(evt);
            }
        });
        btnedit_suku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnedit_sukuActionPerformed(evt);
            }
        });
        jPanel14.add(btnedit_suku);

        btnhapus_suku.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N
        btnhapus_suku.setForeground(new java.awt.Color(255, 255, 255));
        btnhapus_suku.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/trash.png"))); // NOI18N
        btnhapus_suku.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnhapus_sukuMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnhapus_sukuMouseExited(evt);
            }
        });
        btnhapus_suku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnhapus_sukuActionPerformed(evt);
            }
        });
        jPanel14.add(btnhapus_suku);

        btnbatal.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N
        btnbatal.setForeground(new java.awt.Color(255, 255, 255));
        btnbatal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/cancel.png"))); // NOI18N
        btnbatal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnbatalMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnbatalMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnbatalMousePressed(evt);
            }
        });
        btnbatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbatalActionPerformed(evt);
            }
        });
        jPanel14.add(btnbatal);

        getContentPane().add(jPanel14, java.awt.BorderLayout.SOUTH);

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel13.setBackground(new java.awt.Color(51, 51, 51));
        jPanel13.setMinimumSize(new java.awt.Dimension(500, 230));
        jPanel13.setLayout(new java.awt.GridBagLayout());

        jLabel7.setFont(new java.awt.Font("Futura Bk BT", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("KODE BARANG");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(11, 29, 11, 29);
        jPanel13.add(jLabel7, gridBagConstraints);

        lbljenis.setFont(new java.awt.Font("Futura Bk BT", 1, 18)); // NOI18N
        lbljenis.setForeground(new java.awt.Color(255, 255, 255));
        lbljenis.setText("JENIS BARANG");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(11, 29, 11, 29);
        jPanel13.add(lbljenis, gridBagConstraints);

        jLabel10.setFont(new java.awt.Font("Futura Bk BT", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("NAMA BARANG");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(11, 29, 11, 29);
        jPanel13.add(jLabel10, gridBagConstraints);

        jLabel12.setFont(new java.awt.Font("Futura Bk BT", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("MERK BARANG");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(11, 29, 11, 29);
        jPanel13.add(jLabel12, gridBagConstraints);

        jLabel13.setFont(new java.awt.Font("Futura Bk BT", 2, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("SATUAN");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(12, 12, 12, 12);
        jPanel13.add(jLabel13, gridBagConstraints);

        jLabel14.setFont(new java.awt.Font("Futura Bk BT", 1, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("KET");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(11, 29, 11, 29);
        jPanel13.add(jLabel14, gridBagConstraints);

        jLabel15.setFont(new java.awt.Font("Futura Bk BT", 1, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("HARGA");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(11, 29, 11, 29);
        jPanel13.add(jLabel15, gridBagConstraints);

        cmbjenis_barang.setBackground(new java.awt.Color(0, 0, 0));
        cmbjenis_barang.setFont(new java.awt.Font("Lucida Bright", 1, 14)); // NOI18N
        cmbjenis_barang.setForeground(new java.awt.Color(255, 255, 255));
        cmbjenis_barang.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "------PILIHAN------", "OLI", "BAN", "ONDERDIL MESIN", "ACCESORIS" }));
        cmbjenis_barang.setNextFocusableComponent(cmbmerk_barang);
        cmbjenis_barang.setPreferredSize(new java.awt.Dimension(210, 35));
        cmbjenis_barang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbjenis_barangActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(12, 0, 12, 0);
        jPanel13.add(cmbjenis_barang, gridBagConstraints);

        txtkode_barang.setBackground(new java.awt.Color(0, 0, 0));
        txtkode_barang.setFont(new java.awt.Font("Lucida Bright", 0, 14)); // NOI18N
        txtkode_barang.setForeground(new java.awt.Color(255, 255, 255));
        txtkode_barang.setPreferredSize(new java.awt.Dimension(210, 38));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(12, 0, 12, 0);
        jPanel13.add(txtkode_barang, gridBagConstraints);

        cmbmerk_barang.setBackground(new java.awt.Color(0, 0, 0));
        cmbmerk_barang.setFont(new java.awt.Font("Lucida Bright", 1, 14)); // NOI18N
        cmbmerk_barang.setForeground(new java.awt.Color(255, 255, 255));
        cmbmerk_barang.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--PILIHAN--" }));
        cmbmerk_barang.setNextFocusableComponent(txtnama_barang);
        cmbmerk_barang.setPreferredSize(new java.awt.Dimension(140, 35));
        cmbmerk_barang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbmerk_barangActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(12, 0, 12, 0);
        jPanel13.add(cmbmerk_barang, gridBagConstraints);

        txtstock.setBackground(new java.awt.Color(0, 0, 0));
        txtstock.setFont(new java.awt.Font("Lucida Bright", 0, 14)); // NOI18N
        txtstock.setForeground(new java.awt.Color(255, 255, 255));
        txtstock.setPreferredSize(new java.awt.Dimension(70, 38));
        txtstock.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtstockKeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(12, 0, 12, 0);
        jPanel13.add(txtstock, gridBagConstraints);

        jLabel16.setFont(new java.awt.Font("Futura Bk BT", 1, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("STOCK");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(11, 29, 11, 29);
        jPanel13.add(jLabel16, gridBagConstraints);

        txtharga.setBackground(new java.awt.Color(0, 0, 0));
        txtharga.setFont(new java.awt.Font("Lucida Bright", 0, 14)); // NOI18N
        txtharga.setForeground(new java.awt.Color(255, 255, 255));
        txtharga.setNextFocusableComponent(txtket_barang);
        txtharga.setPreferredSize(new java.awt.Dimension(210, 38));
        txtharga.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txthargaKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txthargaKeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(12, 0, 12, 0);
        jPanel13.add(txtharga, gridBagConstraints);

        txtket_barang.setBackground(new java.awt.Color(0, 0, 0));
        txtket_barang.setFont(new java.awt.Font("Lucida Bright", 0, 14)); // NOI18N
        txtket_barang.setForeground(new java.awt.Color(255, 255, 255));
        txtket_barang.setText("-");
        txtket_barang.setPreferredSize(new java.awt.Dimension(210, 38));
        txtket_barang.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtket_barangKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(12, 0, 12, 0);
        jPanel13.add(txtket_barang, gridBagConstraints);

        txtnama_barang.setBackground(new java.awt.Color(0, 0, 0));
        txtnama_barang.setFont(new java.awt.Font("Lucida Bright", 0, 14)); // NOI18N
        txtnama_barang.setForeground(new java.awt.Color(255, 255, 255));
        txtnama_barang.setNextFocusableComponent(txtstock);
        txtnama_barang.setPreferredSize(new java.awt.Dimension(210, 38));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(12, 0, 12, 0);
        jPanel13.add(txtnama_barang, gridBagConstraints);

        txtmerk.setPreferredSize(new java.awt.Dimension(34, 24));
        txtmerk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtmerkActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        jPanel13.add(txtmerk, gridBagConstraints);

        btntambah_merk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/add-circular-button32.png"))); // NOI18N
        btntambah_merk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntambah_merkActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        jPanel13.add(btntambah_merk, gridBagConstraints);

        jPanel1.add(jPanel13, java.awt.BorderLayout.LINE_START);

        jPanel15.setBackground(new java.awt.Color(51, 51, 51));
        jPanel15.setLayout(new java.awt.GridBagLayout());

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/motorbike256.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.insets = new java.awt.Insets(0, 16, 0, 16);
        jPanel15.add(jLabel11, gridBagConstraints);

        txtcari.setBackground(new java.awt.Color(0, 0, 0));
        txtcari.setFont(new java.awt.Font("Lucida Bright", 0, 14)); // NOI18N
        txtcari.setForeground(new java.awt.Color(255, 255, 255));
        txtcari.setPreferredSize(new java.awt.Dimension(250, 50));
        txtcari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtcariKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(23, 5, 23, 5);
        jPanel15.add(txtcari, gridBagConstraints);

        btncari_suku.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/magnifying-glass-search.png"))); // NOI18N
        btncari_suku.setPreferredSize(new java.awt.Dimension(62, 50));
        btncari_suku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncari_sukuActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        jPanel15.add(btncari_suku, gridBagConstraints);

        jPanel1.add(jPanel15, java.awt.BorderLayout.CENTER);

        jPanel2.setBackground(new java.awt.Color(51, 51, 51));
        jPanel2.setLayout(new java.awt.BorderLayout());

        jScrollPane1.setPreferredSize(new java.awt.Dimension(453, 175));

        tblsuku_cadang.setBackground(new java.awt.Color(51, 51, 51));
        tblsuku_cadang.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N
        tblsuku_cadang.setForeground(new java.awt.Color(255, 255, 255));
        tblsuku_cadang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblsuku_cadang);

        jPanel2.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel2, java.awt.BorderLayout.SOUTH);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbjenis_barangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbjenis_barangActionPerformed

                if (cmbjenis_barang.getSelectedItem().equals("OLI")) {
                    try {
                        String sql;
                        sql="SELECT * FROM suku_cadang WHERE jenis_suku_cadang = 'OLI' ORDER BY kode_barang DESC LIMIT 1";
                            rs =  sta.executeQuery(sql);
                        if (rs.next()) {
                            String nofak = rs.getString("kode_barang").substring(2,6);
                            String AN = "" + (Integer.parseInt(nofak) + 1);
                            String Nol = "";

                                if(AN.length()==1)
                                {Nol = "000";}
                                else if(AN.length()==2)
                                {Nol = "00";}
                                else if(AN.length()==3)
                                {Nol = "0";}
                                else if(AN.length()==4)
                                {Nol = "";}
                                
                                txtkode_barang.setText("OL" + Nol + AN);
                
                        } else {
                            txtkode_barang.setText("OL0001");
                        }
                    } catch (Exception e) {
                    }
                    

                } else if (cmbjenis_barang.getSelectedItem().equals("BAN")) {
                   try {
                        String sql;
                        sql="SELECT * FROM suku_cadang WHERE jenis_suku_cadang = 'BAN' ORDER BY kode_barang DESC LIMIT 1";
                            rs =  sta.executeQuery(sql);
                        if (rs.next()) {
                            String nofak = rs.getString("kode_barang").substring(2,6);
                            String AN = "" + (Integer.parseInt(nofak) + 1);
                            String Nol = "";

                                if(AN.length()==1)
                                {Nol = "000";}
                                else if(AN.length()==2)
                                {Nol = "00";}
                                else if(AN.length()==3)
                                {Nol = "0";}
                                else if(AN.length()==4)
                                {Nol = "";}
                                
                                txtkode_barang.setText("BN" + Nol + AN);
                
                        } else {
                            txtkode_barang.setText("BN0001");
                        }
                    } catch (Exception e) {
                    }

                } else if (cmbjenis_barang.getSelectedItem().equals("ONDERDIL MESIN")) {
                  try {
                        String sql;
                        sql="SELECT * FROM suku_cadang WHERE jenis_suku_cadang = 'ONDERDIL MESIN' ORDER BY kode_barang DESC LIMIT 1";
                            rs =  sta.executeQuery(sql);
                        if (rs.next()) {
                            String nofak = rs.getString("kode_barang").substring(2,6);
                            String AN = "" + (Integer.parseInt(nofak) + 1);
                            String Nol = "";

                                if(AN.length()==1)
                                {Nol = "000";}
                                else if(AN.length()==2)
                                {Nol = "00";}
                                else if(AN.length()==3)
                                {Nol = "0";}
                                else if(AN.length()==4)
                                {Nol = "";}
                                
                                txtkode_barang.setText("OM" + Nol + AN);
                
                        } else {
                            txtkode_barang.setText("OM0001");
                        }
                    } catch (Exception e) {
                    }

                } else if (cmbjenis_barang.getSelectedItem().equals("ACCESORIS")) {
                   try {
                        String sql;
                        sql="SELECT * FROM suku_cadang WHERE jenis_suku_cadang = 'ACCESORIS' ORDER BY kode_barang DESC LIMIT 1";
                            rs =  sta.executeQuery(sql);
                        if (rs.next()) {
                            String nofak = rs.getString("kode_barang").substring(2,6);
                            String AN = "" + (Integer.parseInt(nofak) + 1);
                            String Nol = "";

                                if(AN.length()==1)
                                {Nol = "000";}
                                else if(AN.length()==2)
                                {Nol = "00";}
                                else if(AN.length()==3)
                                {Nol = "0";}
                                else if(AN.length()==4)
                                {Nol = "";}
                                
                                txtkode_barang.setText("AC" + Nol + AN);
                
                        } else {
                            txtkode_barang.setText("AC0001");
                        }
                    } catch (Exception e) {
                    }
                }
    }//GEN-LAST:event_cmbjenis_barangActionPerformed

    private void cmbmerk_barangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbmerk_barangActionPerformed
        try {
            String sql;
            sql = ("SELECT * FROM merk_barang WHERE nm_merk='"+ cmbmerk_barang.getSelectedItem() +"'");
            rs = sta.executeQuery(sql);
            while (rs.next()) {
                String id_suku = rs.getString("id_merk");

                txtmerk.setText(id_suku);
            }
        } catch (Exception e) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbmerk_barangActionPerformed

    private void txtstockKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtstockKeyTyped
        char karakter = evt.getKeyChar();
        if(!(((karakter >= '0') && (karakter <= '9') || (karakter == KeyEvent.VK_BACKSPACE) || (karakter == KeyEvent.VK_DELETE)))){
            getToolkit().beep();
            evt.consume();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtstockKeyTyped

    private void txthargaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txthargaKeyTyped
        char karakter = evt.getKeyChar();
        if(!(((karakter >= '0') && (karakter <= '9') || (karakter == KeyEvent.VK_BACKSPACE) || (karakter == KeyEvent.VK_DELETE)))){
            getToolkit().beep();
            evt.consume();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txthargaKeyTyped

    private void txtmerkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtmerkActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtmerkActionPerformed

    private void btntambah_sukuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntambah_sukuActionPerformed
        try {
            String sql = "SELECT COUNT(*) AS 'jumlah' FROM suku_cadang WHERE nm_suku_cadang = '" +txtnama_barang.getText()+ "' AND id_merk='" +txtmerk.getText()+ "'";
            rs = sta.executeQuery(sql);
            if (rs.next()) {
                int jumlah  = Integer.parseInt(rs.getString("jumlah"));
                if(jumlah >= 1) {
                    JOptionPane.showMessageDialog(rootPane, "Nama Barang Sudah Ada !");
                }
                else if (cmbjenis_barang.getSelectedItem().equals("------PILIHAN------") ||
            cmbmerk_barang.getSelectedItem().equals("--PILIHAN--") ||
            txtharga.getText().equals("") || txtnama_barang.getText().equals("") ||
            txtstock.getText().equals("") || txtket_barang.getText().equals(""))
        {
            JOptionPane.showMessageDialog(rootPane, "HARAP ISI SEMUA DATA");
        }
        else {
            try {
                String sql1;
                String nama_barang = cmbjenis_barang.getSelectedItem()+" "+cmbmerk_barang.getSelectedItem()+" "+txtnama_barang.getText();

                sql1 = ("INSERT INTO suku_cadang(kode_barang,nm_suku_cadang,id_merk,jenis_suku_cadang,stock,harga,ket) "
                    + "VALUES('" + txtkode_barang.getText() + "','" +nama_barang+ "','" + txtmerk.getText()  + "','" + cmbjenis_barang.getSelectedItem()  + "','" + txtstock.getText()  + "','" + txtharga.getText()  + "','" + txtket_barang.getText()  + "')");
                sta.executeUpdate(sql1);

                JOptionPane.showMessageDialog(rootPane, "BERHASIL");
                  kosong();
                  masuktable_suku();
                   
            } catch (Exception e) {
                
            }
        }
            }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
        
        // TODO add your handling code here:
    }//GEN-LAST:event_btntambah_sukuActionPerformed

    private void btntambah_merkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntambah_merkActionPerformed
        new Merk().setVisible(true);
        this.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_btntambah_merkActionPerformed

    private void txthargaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txthargaKeyPressed
     if (evt.getKeyCode() == com.sun.glass.events.KeyEvent.VK_ENTER) {
            btntambah_sukuActionPerformed(new java.awt.event.ActionEvent(evt.getSource(), evt.getID(), "Key Press"+ ""));
         }
        // TODO add your handling code here:
    }//GEN-LAST:event_txthargaKeyPressed

    private void txtket_barangKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtket_barangKeyPressed
         if (evt.getKeyCode() == com.sun.glass.events.KeyEvent.VK_ENTER) {
            btntambah_sukuActionPerformed(new java.awt.event.ActionEvent(evt.getSource(), evt.getID(), "Key Press"+ ""));
         }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtket_barangKeyPressed

    private void btnedit_sukuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnedit_sukuActionPerformed
       int confirmed = JOptionPane.showConfirmDialog(null,
            "Yakin Ingin Merubah Data", "EDIT DATA",
            JOptionPane.YES_NO_OPTION);
        //dibuat untuk melakukan konfirmasi
        if (confirmed == JOptionPane.YES_OPTION) {
            try {
                String sql;
                sql = ("UPDATE suku_cadang SET nm_suku_cadang='" +txtnama_barang.getText()+ "' , id_merk='" +txtmerk.getText()+ "', stock='" +txtstock.getText()+ "', harga='" +txtharga.getText()+ "', "
                        + "ket='" +txtket_barang.getText()+ "' WHERE kode_barang='" +txtkode_barang.getText()+ "'");
                
                sta.executeUpdate(sql);
                JOptionPane.showMessageDialog(rootPane, "BERHASIL DIUBAH");

                kosong();
                masuktable_suku();

                btnedit_suku.setEnabled(false);
                btnhapus_suku.setEnabled(false);
                btntambah_suku.setEnabled(true);
                lbljenis.setVisible(true);
                cmbjenis_barang.setVisible(true);

            } catch (Exception e) {
                System.out.println(e.getMessage());
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btnedit_sukuActionPerformed

    private void btnhapus_sukuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnhapus_sukuActionPerformed
        int confirmed = JOptionPane.showConfirmDialog(null,
            "Yakin Ingin Menghapus Data", "HAPUS DATA",
            JOptionPane.YES_NO_OPTION);
        //dibuat untuk melakukan konfirmasi
        if (confirmed == JOptionPane.YES_OPTION) {
            try {
                String sql;
                sql = ("DELETE FROM suku_cadang WHERE kode_barang='" + txtkode_barang.getText() + "'");
                sta.executeUpdate(sql);
                JOptionPane.showMessageDialog(rootPane, "BERHASIL DIHAPUS");

                kosong();
                masuktable_suku();

                btnedit_suku.setEnabled(false);
                btnhapus_suku.setEnabled(false);
                btntambah_suku.setEnabled(true);
                lbljenis.setVisible(true);
                cmbjenis_barang.setVisible(true);

            } catch (Exception e) {
                System.out.println(e.getMessage());
            }
        }
// TODO add your handling code here:
    }//GEN-LAST:event_btnhapus_sukuActionPerformed

    private void btncari_sukuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncari_sukuActionPerformed
        TableRowSorter sorter = new TableRowSorter(tblsuku_cadang.getModel());
        tblsuku_cadang.setRowSorter(sorter);
        sorter.setRowFilter(RowFilter.regexFilter(Pattern.compile("(?i).*"+ txtcari.getText()+".*",Pattern.CASE_INSENSITIVE | Pattern.DOTALL).toString()));
        tblsuku_cadang.setSelectionMode(1);
        // TODO add your handling code here:
    }//GEN-LAST:event_btncari_sukuActionPerformed

    private void txtcariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcariKeyPressed
         if (evt.getKeyCode() == com.sun.glass.events.KeyEvent.VK_ENTER) {
            btncari_sukuActionPerformed(new java.awt.event.ActionEvent(evt.getSource(), evt.getID(), "Key Press"+ ""));
         }
    }//GEN-LAST:event_txtcariKeyPressed

    private void btnbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbackActionPerformed
        this.dispose();
            // TODO add your handling code here:
    }//GEN-LAST:event_btnbackActionPerformed

    private void btnbatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbatalActionPerformed
        lbljenis.setVisible(true);
        cmbjenis_barang.setVisible(true);
        btnedit_suku.setEnabled(false);
        btntambah_suku.setEnabled(true);
        btnhapus_suku.setEnabled(false);
        kosong();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnbatalActionPerformed

    private void btntambah_sukuMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btntambah_sukuMouseEntered
        btntambah_suku.setText("TAMBAH");
    }//GEN-LAST:event_btntambah_sukuMouseEntered

    private void btntambah_sukuMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btntambah_sukuMouseExited
        btntambah_suku.setText("");
    }//GEN-LAST:event_btntambah_sukuMouseExited

    private void btnedit_sukuMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnedit_sukuMouseEntered
        btnedit_suku.setText("EDIT");
    }//GEN-LAST:event_btnedit_sukuMouseEntered

    private void btnedit_sukuMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnedit_sukuMouseExited
        btnedit_suku.setText("");
    }//GEN-LAST:event_btnedit_sukuMouseExited

    private void btnhapus_sukuMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnhapus_sukuMouseEntered
        btnhapus_suku.setText("HAPUS");
    }//GEN-LAST:event_btnhapus_sukuMouseEntered

    private void btnhapus_sukuMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnhapus_sukuMouseExited
        btnhapus_suku.setText("");
    }//GEN-LAST:event_btnhapus_sukuMouseExited

    private void btnbatalMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnbatalMouseExited
        btnbatal.setText("");
    }//GEN-LAST:event_btnbatalMouseExited

    private void btnbatalMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnbatalMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnbatalMousePressed

    private void btnbatalMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnbatalMouseEntered
        btnbatal.setText("REFRESH");
    }//GEN-LAST:event_btnbatalMouseEntered

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Suku_Cadang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Suku_Cadang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Suku_Cadang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Suku_Cadang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Suku_Cadang().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnback;
    private javax.swing.JButton btnbatal;
    private javax.swing.JButton btncari_suku;
    private javax.swing.JButton btnedit_suku;
    private javax.swing.JButton btnhapus_suku;
    private javax.swing.JButton btntambah_merk;
    private javax.swing.JButton btntambah_suku;
    private javax.swing.JComboBox cmbjenis_barang;
    private javax.swing.JComboBox cmbmerk_barang;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbljenis;
    private javax.swing.JTable tblsuku_cadang;
    private javax.swing.JTextField txtcari;
    private javax.swing.JTextField txtharga;
    private javax.swing.JTextField txtket_barang;
    private javax.swing.JTextField txtkode_barang;
    private javax.swing.JTextField txtmerk;
    private javax.swing.JTextField txtnama_barang;
    private javax.swing.JTextField txtstock;
    // End of variables declaration//GEN-END:variables
static public class HeaderColor extends DefaultTableCellRenderer {
       public HeaderColor(){
           setOpaque(true);
       }   
       public Component getTableCellRendererComponent(JTable tbl_merk, Object value, boolean selected, boolean focused, int row, int column) { 
        super.getTableCellRendererComponent(tbl_merk, value, selected, focused, row, column);
           setBackground(java.awt.Color.black);
           return this;
       }
    }
}
